{"id":"../node_modules/parcel-bundler/src/builtins/bundle-url.js","dependencies":[{"name":"/workspace/man/package.json","includedInParent":true,"mtime":1632997417472},{"name":"/workspace/man/.babelrc","includedInParent":true,"mtime":1632997417448},{"name":"/workspace/man/node_modules/parcel-bundler/package.json","includedInParent":true,"mtime":1632997445000},{"name":"/workspace/man/node_modules/parcel-bundler/src/.babelrc","includedInParent":true,"mtime":1632997445000}],"generated":{"js":"var bundleURL = null;\n\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  // Attempt to find the URL of the current script and use that as the base URL\n  try {\n    throw new Error();\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|chrome-extension|moz-extension):\\/\\/[^)\\n]+/g);\n\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|chrome-extension|moz-extension):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;"},"sourceMaps":null,"error":null,"hash":"60f34b2b826c8fa35ec86744f3cd5cbd","cacheData":{"env":{}}}